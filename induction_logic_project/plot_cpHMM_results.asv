% script to plot results from cpHMM inference
clear
close all
addpath(genpath('utilities'))

projectNameCell = {'20200807_WT', '20200807_opto_chronic'};
DataRoot = 'S:\Nick\Dropbox\InductionLogic\';

% make figure path
FigPath = [DataRoot 'comparison_figures' filesep];
mkdir(FigPath);

% Set basic plotting parameters
xVar = 'time';

% useful colors
MarkerSize = 50;
blue = [115 143 193]/256;
purple = [171 133 172]/256;
red = [213 108 85]/256;

% set axes
dur_lims = [0 3.5];
freq_lims = [0 3];
init_lims = [0 18]*1e4;

% initialize plotting structure
plotting_struct = struct;

for p = 1:length(projectNameCell)
    % set project to analyze 
    projectName = projectNameCell{p};

    % get path to results    
    resultsDir = [DataRoot projectName filesep 'cpHMM_results' filesep];
    
    % make figure directory
    figureDir = [resultsDir 'figures' filesep];
    mkdir(figureDir);
    
    % get list of projects
    resultList = dir([resultsDir '*result*']);            
    
    for r = 1%:length(resultList)
      
        % load data
        load([resultsDir filesep resultList(r).name]);
                  
        % transfer results
        plotting_struct(p).init_vec_mean = compiledResults.init_vec_mean;
        plotting_struct(p).init_vec_ste = compiledResults.init_vec_ste;
        
        plotting_struct(p).freq_vec_mean = compiledResults.freq_vec_mean;
        plotting_struct(p).freq_vec_ste = compiledResults.freq_vec_ste;
        
        plotting_struct(p).dur_vec_mean = compiledResults.dur_vec_mean;
        plotting_struct(p).dur_vec_ste = compiledResults.dur_vec_ste;
        
        plotting_struct(p).time_vec_mean = compiledResults.time_vec_mean;
        plotting_struct(p).time_vec_ste = compiledResults.time_vec_ste;
        
    end
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% make figures        
close all

r_trend = figure;
hm_cm = flipud(brewermap(size(newVarArray,1)+2,'Set2'));
colormap(hm_cm);

hold on
for i = 1:length(plot_struct)\  
    e = errorbar(plot_struct(p).time_vec_mean(ind_list),compiledResults.init_vec_mean(ind_list),compiledResults.init_vec_ste(ind_list),'o--','Color','black','LineWidth',1);          
    e.CapSize = 0;
end
s = [];
for i = 1:size(newVarArray,1)
    ind_list = find(indexList==i);
    s(i) = scatter(compiledResults.fluo_mean(ind_list),compiledResults.init_vec_mean(ind_list),MarkerSize,'o','MarkerFaceColor',hm_cm(i+1,:),'MarkerEdgeColor','black');
    if lgd_flag
      lgd_str(i) = {[lgd_prefix num2str(newVarArray(i,gpIndex))]};
    end
end        
grid on
%         xlim(x_lim)
% ylim([50 95])
xlabel('MS2 spot intensity (au)') % NL: need to make this dynamic
ylabel('burst amplitude (au/min)')
if lgd_flag
    legend(s,lgd_str{:},'Location','southeast')
end
title(['Burst Amplitude (r): ' projectName])
set(gca,'Fontsize',14)
ylim(init_lims);
%         StandardFigure([],gca)
box on
saveas(r_trend,[figureDir, 'burst_amp_' additionalVar '.tif'])
saveas(r_trend,[figureDir, 'burst_amp_' additionalVar '.pdf'])
%

dur_trend = figure;        

hold on
for i = 1:size(newVarArray,1)
    ind_list = find(indexList==i);
    e = errorbar(compiledResults.fluo_mean(ind_list),compiledResults.dur_vec_mean(ind_list),compiledResults.dur_vec_ste(ind_list),'o','Color','black','LineWidth',1);          
    e.CapSize = 0;
end
s = [];
for i = 1:size(newVarArray,1)
    ind_list = find(indexList==i);
    s(i) = scatter(compiledResults.fluo_mean(ind_list),compiledResults.dur_vec_mean(ind_list),MarkerSize,'o','MarkerFaceColor',hm_cm(i+1,:),'MarkerEdgeColor','black');   
end        
grid on
title(['Burst Duration (1/k_{off}): ' projectName])
xlabel('MS2 spot intensity (au)') % NL: need to make this dynamic
ylabel('burst duration (min)')
if lgd_flag
    legend(s,lgd_str{:},'Location','southeast')
end

ylim(dur_lims);
set(gca,'Fontsize',14)
%         StandardFigure([],gca)
box on
saveas(dur_trend,[figureDir,'burst_dur_' additionalVar '.tif'])
saveas(dur_trend,[figureDir,'burst_dur_' additionalVar '.pdf']);

%   

freq_trend = figure;

hold on
for i = 1:size(newVarArray,1)
    ind_list = find(indexList==i);
    e = errorbar(compiledResults.fluo_mean(ind_list),compiledResults.freq_vec_mean(ind_list),compiledResults.freq_vec_ste(ind_list),'o','Color','black','LineWidth',1);          
    e.CapSize = 0;
end
s = [];
for i = 1:size(newVarArray,1)
    ind_list = find(indexList==i);
    s(i) = scatter(compiledResults.fluo_mean(ind_list),compiledResults.freq_vec_mean(ind_list),MarkerSize,'o','MarkerFaceColor',hm_cm(i+1,:),'MarkerEdgeColor','black');   
end        
grid on
title(['Burst Frequency (k_{on}): ' projectName])
xlabel('MS2 spot intensity (au)') % NL: need to make this dynamic
ylabel('burst frequency (1/min)')
if lgd_flag
    legend(s,lgd_str{:},'Location','southeast')
end        
%         StandardFigure([],gca)
set(gca,'Fontsize',14)
ylim(freq_lims)
box on

saveas(freq_trend,[figureDir,'burst_freq_' additionalVar '.tif']);
saveas(freq_trend,[figureDir,'burst_freq_' additionalVar '.pdf']);